<Window x:Class="TSP_WPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TSP_WPF"
        mc:Ignorable="d"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:helpers="clr-namespace:TSP_WPF.Helpers"
        Title="MainWindow" Height="1000" Width="1600" Top="20" FontSize="13">
    <Window.Resources>
        <Style x:Key="menuLabel" TargetType="Label">
            <Setter Property="Margin" Value="0 0 0 5"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="Black"/>
            <Setter Property="Foreground" Value="White"/>
        </Style>

        <Style TargetType="TextBox">
            <Setter Property="MinWidth" Value="100"/>
            <Setter Property="MaxHeight" Value="50"/>
            <Setter Property="MinHeight" Value="30"/>
        </Style>

        <Style TargetType="StackPanel">
            <Setter Property="Margin" Value="5"/>
        </Style>

        <Style TargetType="Grid">
        </Style>

        <Style TargetType="Border">
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="BorderThickness" Value="0.5"/>
        </Style>

        <Style TargetType="Button">
            <Setter Property="Margin" Value="5"/>
        </Style>

        <Style TargetType="xctk:IntegerUpDown">
            <!--<Setter Property="Margin" Value="10"/>-->
        </Style>

        <Style TargetType="RadioButton">
            <Setter Property="Margin" Value="10"/>
        </Style>

        <Style x:Key="startBtn" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding AbleToStart}" Value="True">
                    <Setter Property="Background" Value="Green"/>
                    <Setter Property="IsEnabled" Value="True"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="pauseBtn" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding AbleToPause}" Value="True">
                    <Setter Property="Background" Value="Yellow"/>
                    <Setter Property="IsEnabled" Value="True"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="unpauseBtn" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding AbleToUnpause}" Value="True">
                    <Setter Property="Background" Value="Yellow"/>
                    <Setter Property="IsEnabled" Value="True"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="stopBtn" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding AbleToStop}" Value="True">
                    <Setter Property="Background" Value="Red"/>
                    <Setter Property="IsEnabled" Value="True"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="exitBtn" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding AbleToExit}" Value="True">
                    <Setter Property="Background" Value="DarkSlateGray"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="IsEnabled" Value="True"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Grid x:Name="layoutGrid">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="2*"/>
        </Grid.ColumnDefinitions>


        <Grid Grid.Column="0" x:Name="menuGrid">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"></RowDefinition>
                <RowDefinition Height="auto"></RowDefinition>
                <RowDefinition Height="auto"></RowDefinition>
                <RowDefinition Height="auto"></RowDefinition>
                <RowDefinition Height="auto"></RowDefinition>
                <RowDefinition Height="auto"></RowDefinition>
            </Grid.RowDefinitions>

            <Border Grid.Row="0">
                <StackPanel >
                    <Label Content="TSP File" Style="{StaticResource menuLabel}"/>
                    <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Disabled">
                        <TextBox Text="{Binding FilePath}" TextWrapping="NoWrap" IsReadOnly="True"/>
                    </ScrollViewer>
                    <Button x:Name="browseFile" Content="Browse" Command="{Binding LoadFileCommand}"/>
                </StackPanel>
            </Border>

            <Border Grid.Row="1">
                <StackPanel>
                    <Label Content="Mechanism" Style="{StaticResource menuLabel}"/>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                        <RadioButton IsChecked="{Binding TasksChecked}" GroupName="mechanismRadio">Tasks</RadioButton>
                        <RadioButton IsChecked="{Binding ThreadsChecked}" GroupName="mechanismRadio">Threads</RadioButton>
                    </StackPanel>
                </StackPanel>
            </Border>

            <Border Grid.Row="2">
                <StackPanel>
                    <Label Content="How Many" Style="{StaticResource menuLabel}"/>
                    <xctk:IntegerUpDown Name="howManyControl" Value="{Binding HowMany}" Width="100"/>
                </StackPanel>
            </Border>

            <Border Grid.Row="3">
                <StackPanel>
                    <Label Content="How Long" Style="{StaticResource menuLabel}"/>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                        <Label>Max Duration</Label>
                        <xctk:IntegerUpDown Name="maxDuration" Value="{Binding MaxDuration}" Width="100"/>
                    </StackPanel>
                    <!--<StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                        <Label>Phase 1 [s]</Label>
                        <xctk:IntegerUpDown Name="howLongPhase1Control" Value="{Binding HowLongPhase1}" Width="100"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                        <Label>Phase 2 [s]</Label>
                        <xctk:IntegerUpDown Name="howLongPhase2Control" Value="{Binding HowLongPhase2}" Width="100"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                        <Label>Number of epochs</Label>
                        <xctk:IntegerUpDown Name="numberOfEpochs" Value="{Binding NumberOfEpochs}" Width="100"/>
                    </StackPanel>-->
                </StackPanel>
            </Border>

            <Border Grid.Row="4">
                <StackPanel>
                    <Label Content="Progress &amp; Results" Style="{StaticResource menuLabel}"/>
                    <StackPanel Orientation="Horizontal">
                        <Label>Best Result:</Label>
                        <Label Content="{Binding BestResult}"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label>Thread Id</Label>
                        <Label Content="{Binding BestThreadId}"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label>Solution Count:</Label>
                        <Label Content="{Binding SolutionCount}"/>
                    </StackPanel>
                    <StackPanel>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <Label>Progress:</Label>
                            <Label Content="{Binding ProgressString}"/>
                        </StackPanel>
                        <ProgressBar Minimum="0" Value="{Binding Progress}" Maximum="{Binding MaxDuration}" Width="auto" Height="25"/>
                    </StackPanel>
                </StackPanel>
            </Border>

            <Border Grid.Row="5">
                <StackPanel>
                    <Label Content="Controls" Style="{StaticResource menuLabel}"/>
                    <Button x:Name="startButton" Command="{Binding StartCommand}"
                            Style="{StaticResource startBtn}" IsEnabled="{Binding AbleToStart}">Start</Button>
                    <!--<Button x:Name="pauseButton" Command="{Binding PauseCommand}"
                            Style="{StaticResource pauseBtn}" IsEnabled="{Binding AbleToPause}">Pause</Button>
                    <Button x:Name="unpauseButton" Command="{Binding UnpauseCommand}"
                            Style="{StaticResource unpauseBtn}" IsEnabled="{Binding AbleToUnpause}">Unpause</Button>-->
                    <Button x:Name="stopButton" Command="{Binding StopCommand}"
                            Style="{StaticResource stopBtn}" IsEnabled="{Binding AbleToStop}">Stop</Button>
                    <Button x:Name="exitButton" Command="{Binding ExitCommand}"
                            Style="{StaticResource exitBtn}" IsEnabled="{Binding AbleToExit}">Exit</Button>
                    <Button x:Name="checkButton" Command="{Binding CheckDataCommand}" >Check Data</Button>
                </StackPanel>
            </Border>
        </Grid>


        <Grid Grid.Column="1" x:Name="solutionGrid">
            <Grid.RowDefinitions>
                <RowDefinition Height="3*"></RowDefinition>
                <RowDefinition Height="1*"></RowDefinition>
            </Grid.RowDefinitions>

            <Border Grid.Row="0" Padding="20">
                <Grid helpers:SizeObserver.Observe="True"
                      helpers:SizeObserver.ObservedWidth="{Binding CanvasWidth, Mode=OneWayToSource}"
                      helpers:SizeObserver.ObservedHeight="{Binding CanvasHeight, Mode=OneWayToSource}">


                    <ItemsControl ItemsSource="{Binding EdgeViewModels}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Canvas Background="LightBlue"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Line X1="{Binding X1}" Y1="{Binding Y1}"
                            X2="{Binding X2}" Y2="{Binding Y2}"
                            Stroke="DarkBlue" StrokeThickness="2">
                                </Line>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>

                    <ItemsControl x:Name="canvas" ItemsSource="{Binding CityViewModels}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Canvas/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Ellipse Width="15" Height="15" Fill="Red" VerticalAlignment="Center"
                                 HorizontalAlignment="Center">
                                    <Ellipse.RenderTransform>
                                        <TranslateTransform X="-7.5" Y="-7.5" />
                                    </Ellipse.RenderTransform>
                                </Ellipse>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                        <ItemsControl.ItemContainerStyle>
                            <Style TargetType="ContentPresenter">
                                <Setter Property="Canvas.Left" Value="{Binding X}" />
                                <Setter Property="Canvas.Top" Value="{Binding Y}" />
                            </Style>
                        </ItemsControl.ItemContainerStyle>
                    </ItemsControl>


                </Grid>

            </Border>

            <Border Grid.Row="1">
                <StackPanel>
                    <Label Style="{StaticResource menuLabel}">Optimal Tour</Label>
                    <ScrollViewer Height="200" ScrollViewer.VerticalScrollBarVisibility="Auto">
                        <DataGrid ItemsSource="{Binding OptimalTour}" AutoGenerateColumns="False" 
                              MinColumnWidth="150" IsReadOnly="True">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="ID" Width="*" Binding="{Binding Id}"/>
                                <DataGridTextColumn Header="X" Width="*" Binding="{Binding X}"/>
                                <DataGridTextColumn Header="Y" Width="*" Binding="{Binding Y}"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </ScrollViewer>

                </StackPanel>
            </Border>
        </Grid>
    </Grid>
</Window>